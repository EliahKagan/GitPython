name: test-cygwin

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    strategy:
      fail-fast: false

    env:
      CHERE_INVOKING: "1"
      CYGWIN_NOWINPATH: "1"

    defaults:
      run:
        shell: C:\cygwin\bin\bash.exe --login --norc -eo pipefail -o igncr "{0}"

    steps:
    - name: Force LF line endings
      run: |
        git config --global core.autocrlf false  # Affects the non-Cygwin git.
      shell: bash  # Use Git Bash instead of Cygwin Bash for this step.

    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install Cygwin
      uses: cygwin/cygwin-install-action@v4
      with:
        packages: python38 python38-pip python38-virtualenv git
        add-to-path: false  # No need to change $PATH outside the Cygwin environment.

    - name: Arrange for verbose output
      run: |
        # Arrange for verbose output but without shell environment setup details.
        echo 'set -x' >~/.bash_profile

    - name: Special configuration for Cygwin git
      run: |
        git config --global --add safe.directory "$(pwd)"
        git config --global core.autocrlf false

    - name: Prepare this repo for tests
      run: |
        ./init-tests-after-clone.sh

    - name: Set git user identity and command aliases for the tests
      run: |
        git config --global user.email "travis@ci.com"
        git config --global user.name "Travis Runner"
        # If we rewrite the user's config by accident, we will mess it up
        # and cause subsequent tests to fail
        cat test/fixtures/.gitconfig >> ~/.gitconfig

    - name: Update PyPA packages
      run: |
        # Get the latest pip, setuptools, and wheel.
        python3.8 -m pip install -U pip setuptools wheel

    - name: Install project and test dependencies
      run: |
        python3.8 -m pip install ".[test]"

    - name: Show version and platform information
      run: |
        uname -a
        command -v git python3.8
        git version
        python3.8 --version
        python3.8 -c 'import os, sys; print(f"sys.platform={sys.platform!r}, os.name={os.name!r}")'

    - name: Test with pytest
      run: |
        python3.8 -m pytest --color=yes -p no:sugar --instafail -vv
